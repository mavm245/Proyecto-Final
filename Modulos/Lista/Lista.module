<?php
/*
*Form Listado de revisión
*@author: mvasquez & varteaga
*@date: 29/09/2015
*/

function Lista_menu() {
	
  $items['Lista'] = array(
    'title' => 'Lista',
    'page callback' => 'Lista_main',
    'access arguments' => array('Lista/'),
    'access callback' => TRUE,
    'weight' => 9,
    'menu_name' => 'main-menu',
    'options' => array('attributes' => array('class' => 'Lista_main')),
	);
  
   $items['Lista/todas'] = array(
    'title' => 'Todas las solicitudes.',    
	'page callback' => 'drupal_get_form',
    'page arguments' => array('Lista_solicitudes_form'),
    'access arguments' => array('Lista/todas'),
  );

  $items['Lista/todas_vis'] = array(
    'title' => 'Todas las solicitudes visitantes.',    
	'page callback' => 'drupal_get_form',
    'page arguments' => array('Lista_solicitudesvis_form'),
    'access arguments' => array('Lista/todas_vis'),
  );
  return $items;
}

function Lista_permission() {
  return array(
    'Lista/' => array(
      'title' => t('Permisos para visualizar las listas de revisiones'),
      'description' => t('Seleccion de usuarios que pueden tener acceso.'),
    ),
    'Lista/todas' => array(
      'title' => t('Permisos para visualizar todas'),
      'description' => t('Seleccion de usuarios que pueden tener acceso.'),
    ),
  
  'Lista/todas_vis' => array(
      'title' => t('Permisos para visualizar todas visitante'),
      'description' => t('Seleccion de usuarios que pueden tener acceso a la lista para visitantes'),
    ),
  );
}

function Lista_main(){
	return t('<ul style="text-align: justify;">
		  		<li>'.l( t("Listado de todas las solicitudes."),'Lista/todas').'</li>
		  		<li>'.l( t("Listado de solicitudes para visitantes"),'Lista/todas_vis').'</li>
		    	</ul>');
}



function Lista_solicitudes_form($form, $form_state){
	$res = Lista_query_solicitud();
	$headers=$res['headers'];
	$raws=$res['raws'];
 	$raws2=array();
	foreach ($raws as $raw) {
		$raws2[$raw['ID']]=$raw;
	}
    $leyenda = Lista_main();
    		    
    $form['etapa'] = array(
      '#type' => 'item',
      '#title' => $leyenda,
    );
	 $form['table'] = array(
    '#type' => 'tableselect',
	//'#theme' => 'table',
    '#header' => $headers,
	'#options' => $raws2,
    //'#options' => $raws2,
    '#empty' => t('No existen solicitudes'),
    '#multiple' => FALSE,
	 );
	
	$form['submit_del'] = array(
      '#value' => 'Borrar Solicitud',
      '#type' => 'submit',
      '#submit' => array('Solicitud_borrar'),
    );
  return $form;	
}


function Lista_solicitudesvis_form($form, $form_state){
	
	$res = Lista_query_solicitud();
	$headers=$res['headers'];
	$raws=$res['raws'];
 	$raws2=array();
	foreach ($raws as $raw) {
		$raws2[$raw['ID']]=$raw;
	}
    $leyenda = Lista_main();
    		    
    $form['etapa'] = array(
      '#type' => 'item',
      '#title' => $leyenda,
    );
	 $form['table'] = array(
    '#type' => 'tableselect',
    '#header' => $headers,
    '#options' => $raws2,
    '#empty' => t('No existen solicitudes'),
    '#multiple' => FALSE,
  	);
	
	$form['submit'] = array(
      '#value' => 'Ver solicitud',
      '#type' => 'submit',
      '#submit' => array('ver_solicitud'),
    );
  return $form;	
}

function Lista_query_solicitud(){
	
	  $registro = db_query('SELECT s.id_solicitud, uw.url_link, s.fecha_ini, s.fecha_fin FROM solicitud s, sitio_web sitw, url_web uw where s.id_sitweb = sitw.id_sitweb and sitw.id_sitweb = uw.id_sitweb order by s.id_solicitud;');
	  db_set_active('default');
  
	  $res = array();
	  
      foreach ($registro as $valor) {
	    array_push($res,get_object_vars($valor));
  	  }	
   	  
	  $array = array();
	  $array['raws'] =array();
	  $array['headers'] =array( 'ID'=>'ID','URL_Sitio'=>'URL_Sitio','Fecha_Inicio'=>'Fecha_Inicio','Fecha_Fin'=>"Fecha_Fin");
	  
	  foreach ($res as $valor) {  
	  	$array_tmp = array();
		  	$array_tmp["ID"] 				= $valor['id_solicitud'];
			$array_tmp["URL_Sitio"] 		= $valor['url_link'];
			$array_tmp["Fecha_Inicio"]	 	= $valor['fecha_ini'];	
			$array_tmp["Fecha_Fin"] 		= $valor['fecha_fin'];
	    array_push($array['raws'],$array_tmp);
	  }
	  return $array;		
	
}
function Lista_generar($form, &$form_submit) {
}

function Solicitud_borrar($form, &$form_submit) {
	
	$values = $form_submit['values'];
	$solicitud = strip_tags($form_submit['values']['table']);
	//drupal_set_message(t('Something @var just happened.', array('@var' => $solicitud)), 'butterflies');

   $consulta_rev = db_select('solicitud','s')
                   ->fields('s',array('num_rev'))
                   ->condition('s.id_solicitud',$solicitud,'=')
                   ->execute()
	               ->fetchField();

	if($consulta_rev == 1){
        $query = 'SELECT id_contacto FROM solicitud_contacto where id_solicitud ='.$solicitud.';';
        $contacto = db_query($query);
        db_set_active('default');
        $res = array();
        foreach ($contacto as $valor) {
            array_push($res,get_object_vars($valor));
        }
        $transaccion = db_transaction();
        try {

        foreach ($res as $valor) {
            $sol_cont = db_delete('solicitud_contacto')
            ->condition('id_contacto', $valor['id_contacto'])
            ->execute();
            $cont = db_delete('contacto')
                ->condition('id_contacto', $valor['id_contacto'])
                ->execute();
        }
            $estado_rev = db_select('revision','r')
                ->fields('r',array('estado_rev'))
                ->condition('r.id_solicitud',$solicitud,'=')
                ->execute()
                ->fetchField();
          if($estado_rev == 1){
           $revision = db_select('revision','r')
                    ->fields('r',array('id_revision'))
                    ->condition('s.id_solicitud',$solicitud,'=')
                    ->execute()
                    ->fetchField();

            $rev_herr = db_delete('rev_herr')
                ->condition('id_revision', $revision)
                ->execute();

            $hall_rev = db_delete('hall_rev')
                ->condition('id_revision', $revision)
                ->execute();

            $rev = db_delete('revision')
                ->condition('id_revision', $revision)
                ->execute();

            $sol = db_delete('solicitud')
                  ->condition('id_solicitud', $solicitud)
                  ->execute();

            }
            else{
                $sol = db_delete('solicitud')
                    ->condition('id_solicitud', $solicitud)
                    ->execute();
            }
            drupal_set_message(t('Borrada solicitud con id = @var, no contiene revisiones.', array('@var' => $solicitud)), 'status');
        }catch (Exception $e) {
            $transaccion->rollback();
            drupal_set_message(t("Hubo un problema. Por favor intente más tarde."), 'error');
        }
	}else{

		//drupal_set_message(t('Solicitud no borrada, contiene revisiones.', array('@var' => $consulta_rev)), 'butterflies');
        drupal_set_message(t("Solicitud no borrada, contiene revisiones"), 'warning');
	}

   /*

   $result = db_select('revision','r')
           ->join('solicitud','s','r.id_solicitud = s.id_solicitud')
           ->fields('r',array('id_solicitud'))
           ->execute()
           ->fetchField();
   */

	 /*
	$transaccion = db_transaction();
  	try {
      $organizacion = db_insert('organizacion')->fields(array(
        'org_nombre' => $nom_org,
		'id_tiporg' => $tipo_org,
      ))->execute();
	
	$orga=db_select('organizacion','t')
  			->fields('t')
			->orderBy('id_organizacion','DESC')
			->execute()
			->fetchAssoc();
	 	$org = $orga['id_organizacion'];
		
      $contacto1 = db_insert('contacto')->fields(array(
    	'cont_nombre' => $nom_adm,
		'cont_correo' => $correo_adm,
		'cont_tel' => $tel_adm,
		'id_tipo_contacto' => '1',
      ))->execute();
	  
	  $cont1=db_select('contacto','t')
  			->fields('t')
			->orderBy('id_contacto','DESC')
			->execute()
			->fetchAssoc();
	 	$c1 = $cont1['id_contacto'];
      
	 $contacto2 = db_insert('contacto')->fields(array(
        'cont_nombre' => $nom_tec,
		'cont_correo' => $correo_tec,
		'cont_tel' => $tel_tec,
		'id_tipo_contacto' => '2',
      ))->execute();
	  
	   $cont2=db_select('contacto','t')
  			->fields('t')
			->orderBy('id_contacto','DESC')
			->execute()
			->fetchAssoc();
	 	$c2 = $cont2['id_contacto'];
	  
	 if( !(empty($ip_bd) && empty($puer_acc_bd) && empty($nom_bd) && empty($soft_bd) && empty($ver_bd))){
	 $manejador = db_insert('manejador_db')->fields(array(
        'id_sistema' => $soft_bd,
        'rdbms_ver' => $ver_bd,
        'rdbms_ip' => $ip_bd,
        'rdbms_puerto' => $puer_acc_bd,
        'rdbms_nom' => $nom_bd,
      ))->execute();
	 }

	 $servidor_web = db_insert('servidor_web')->fields(array(
        'id_so' => $sist_op,
        'serweb_ver' => $sist_op_ver,
        'id_proto' => $prot_acc_rem,
        'acceso_puerto' => $puer_acc_rem,
        'ip_serweb' => $ip_sitio
      ))->execute();
	 
	 $server=db_select('servidor_web','t')
  			->fields('t')
			->orderBy('id_serweb','DESC')
			->execute()
			->fetchAssoc();
	 	$test = $server['id_serweb'];
	 
	  $base=db_select('manejador_db','t')
  			->fields('t')
			->orderBy('id_rdbms','DESC')
			->execute()
			->fetchAssoc();
	 	$bas = $base['id_rdbms'];
	 
	 if( !(empty($ip_bd) && empty($puer_acc_bd) && empty($nom_bd) && empty($soft_bd) && empty($ver_bd))){
	 	$sitio_web = db_insert('sitio_web')->fields(array(
        'id_soft' => $soft_web,
        'sitweb_vers' => $ver_web,
        'id_serweb' => $test,
        'doc_root' => $dir_usua,
        'id_rdbms' => $bas,
      ))->execute();
	 }else{
	 	 $sitio_web = db_insert('sitio_web')->fields(array(
        'id_soft' => $soft_web,
        'sitweb_vers' => $ver_web,
        'id_serweb' => $test,
        'doc_root' => $dir_usua,
      ))->execute();
	 }	
	  
	 
	  $sitio=db_select('sitio_web','t')
  			->fields('t')
			->orderBy('id_sitweb','DESC')
			->execute()
			->fetchAssoc();
	 	$test1 = $sitio['id_sitweb'];
	
	$url_web= db_insert('url_web')->fields(array(
        'url_link' => $url_sitio,
        'id_sitweb' => $test1,
      ))->execute();
	
	$puertos_web= db_insert('puertos_web')->fields(array(
        'puerto_web' => $puer_acc_web,
        'id_sitweb' => $test1,
      ))->execute(); 
	  
	$solicitud= db_insert('solicitud')->fields(array(
        'id_organizacion' => $org,
        'fecha_sol' => $fecha_sol,
        'fecha_disp' => $fecha_disp,
        'fecha_ini' => $fecha_ini,
        'fecha_fin' => $fecha_fin,
        'id_sitweb' => $test1,
      ))->execute(); 	
	 
	 $sol1=db_select('solicitud','t')
  			->fields('t')
			->orderBy('id_solicitud','DESC')
			->execute()
			->fetchAssoc();
	 	$sol = $sol1['id_solicitud'];
		
	$sol_cont= db_insert('solicitud_contacto')->fields(array(
        'id_solicitud' => $sol,
        'id_contacto' => $c1
      ))->execute(); 		
	
	$sol_cont= db_insert('solicitud_contacto')->fields(array(
        'id_solicitud' => $sol,
        'id_contacto' => $c2
      ))->execute(); 
	  
	drupal_set_message(t('Datos Almacenados correctamente'));
    }
    catch (Exception $e) {
      $transaccion->rollback();	
      drupal_set_error(t('Hubo un problema. Por favor intente más tarde.'));
    }
	 * 
	 */
}


function Lista_genera_xls($html,$filename){

      drupal_add_http_header('Content-Type', 'application/vnd.ms-excel; charset=UTF-8');
	  drupal_add_http_header('Content-Disposition', 'attachment; filename = '.$filename.' .xls');
	 
	  // Instead of writing to a file, we write to the output stream.
	  $fh = fopen('php://output', 'w');
	 
	  // Add a header row
	  fputs($fh, $html);
	 
	  // Close the output stream.
	  fclose($fh);
		
	return ;
}

